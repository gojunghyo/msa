plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.flywaydb.flyway" version "8.2.0"

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    flywayMigration
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
    set('springCloudVersion', "2022.0.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.modelmapper:modelmapper:2.4.2'
    implementation 'org.flywaydb:flyway-core:8.5.10'
    implementation 'org.flywaydb:flyway-mysql:8.5.10'
    implementation 'com.mysql:mysql-connector-j:8.0.32'
    flywayMigration "com.mygroupid:my-lib:1.2.3"
    implementation 'com.antkorwin:common-utils:1.2'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'javax.xml.bind:jaxb-api:2.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

flyway {
    url = "jdbc:mysql://localhost:3306/marin?useSSL=false&allowPublicKeyRetrieval=true"
    user = "root"
    password = "root"
    encoding = 'UTF-8'
    locations = ["filesystem:${file('src/db.migration').absolutePath}"]
//    locations = ["filesystem:${file('src/db.migration').absolutePath}"]
    validateOnMigrate = true
}
flywayMigrate.dependsOn(classes)


tasks.named('test') {
    useJUnitPlatform()
}
